[{"/Users/nghiale/Desktop/mini-project/bucket-list/src/index.js":"1","/Users/nghiale/Desktop/mini-project/bucket-list/src/App.js":"2","/Users/nghiale/Desktop/mini-project/bucket-list/src/components/BucketList.js":"3","/Users/nghiale/Desktop/mini-project/bucket-list/src/components/BucketForm.js":"4","/Users/nghiale/Desktop/mini-project/bucket-list/src/components/Bucket.js":"5"},{"size":197,"mtime":1653619690000,"results":"6","hashOfConfig":"7"},{"size":192,"mtime":1653619690000,"results":"8","hashOfConfig":"7"},{"size":1841,"mtime":1653619690000,"results":"9","hashOfConfig":"7"},{"size":2601,"mtime":1653619690000,"results":"10","hashOfConfig":"7"},{"size":1581,"mtime":1653683222903,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"16lhz55",{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"18","messages":"19","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/nghiale/Desktop/mini-project/bucket-list/src/index.js",[],"/Users/nghiale/Desktop/mini-project/bucket-list/src/App.js",[],"/Users/nghiale/Desktop/mini-project/bucket-list/src/components/BucketList.js",["23"],"/Users/nghiale/Desktop/mini-project/bucket-list/src/components/BucketForm.js",["24"],"import React, { useState } from 'react';\n\nfunction BucketForm(props) {\n  const [input, setInput] = useState('');\n  let [eagerness, setEagerness] = useState('');\n\n  // TODO: Use this array in the return statement below\n  const eagernessLevel = ['high', 'medium', 'low']\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (!eagerness) {\n      eagerness = 'low';\n    }\n\n    props.onSubmit({\n      id: Math.random(Math.floor() * 1000),\n      text: input,\n      eagerness: eagerness,\n    });\n\n    setInput('');\n    setEagerness('');\n  };\n\n  const handleChange = (e) => {\n    setInput(e.target.value);\n  };\n\n  // First we check to see if \"edit\" prop exists. If not, we render the normal form\n  // If the prop \"edit\" exists, we know to render the update form instead\n  return !props.edit ? (\n    <div>\n      <form className=\"bucket-form\" onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          placeholder=\"Add to your bucket list\"\n          value={input}\n          name=\"text\"\n          className=\"bucket-input\"\n          onChange={handleChange}\n        ></input>\n        <div className=\"dropdown\">\n          <button className={`dropbtn ${eagerness}`}>\n            {eagerness || 'Priority'}\n          </button>\n          <div className=\"dropdown-content\">\n            {/* TODO: Add an onClick event that will set the corresponding eagerness level from the `eagernessLevel` array */}\n            <p onClick={}>Must do</p>\n            <p onClick={}>Want to do</p>\n            <p onClick={}>Take it or leave it</p>\n          </div>\n        </div>\n        <button className=\"bucket-button\">Add bucket list item</button>\n      </form>\n    </div>\n  ) : (\n    <div>\n      <h3>Update entry: {props.edit.value}</h3>\n      <form className=\"bucket-form\" onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          placeholder={props.edit.value}\n          value={input}\n          name=\"text\"\n          className=\"bucket-input\"\n          onChange={handleChange}\n        ></input>\n        <div className=\"dropdown\">\n          <button className={`dropbtn ${eagerness}`}>\n            {eagerness || 'Priority'}\n          </button>\n          <div className=\"dropdown-content\">\n            {/* TODO: Add an onClick event that will set the corresponding eagerness level from the `eagernessLevel` array */}\n            <p onClick={}>Must do</p>\n            <p onClick={}>Want to do</p>\n            <p onClick={}>Take it or leave it</p>\n          </div>\n        </div>\n        <button className=\"bucket-button\">Update</button>\n      </form>\n    </div>\n  );\n}\n\nexport default BucketForm;\n","/Users/nghiale/Desktop/mini-project/bucket-list/src/components/Bucket.js",["25"],{"ruleId":"26","severity":1,"message":"27","line":18,"column":43,"nodeType":"28","messageId":"29","endLine":18,"endColumn":45},{"ruleId":null,"fatal":true,"severity":2,"message":"30","line":50,"column":24},{"ruleId":null,"fatal":true,"severity":2,"message":"31","line":31,"column":20},"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","Parsing error: JSX attributes must only be assigned a non-empty expression.\n\n\u001b[0m \u001b[90m 48 |\u001b[39m           \u001b[33m<\u001b[39m\u001b[33mdiv\u001b[39m className\u001b[33m=\u001b[39m\u001b[32m\"dropdown-content\"\u001b[39m\u001b[33m>\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 49 |\u001b[39m             {\u001b[90m/* TODO: Add an onClick event that will set the corresponding eagerness level from the `eagernessLevel` array */\u001b[39m}\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 50 |\u001b[39m             \u001b[33m<\u001b[39m\u001b[33mp\u001b[39m onClick\u001b[33m=\u001b[39m{}\u001b[33m>\u001b[39m\u001b[33mMust\u001b[39m \u001b[36mdo\u001b[39m\u001b[33m<\u001b[39m\u001b[33m/\u001b[39m\u001b[33mp\u001b[39m\u001b[33m>\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    |\u001b[39m                        \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 51 |\u001b[39m             \u001b[33m<\u001b[39m\u001b[33mp\u001b[39m onClick\u001b[33m=\u001b[39m{}\u001b[33m>\u001b[39m\u001b[33mWant\u001b[39m to \u001b[36mdo\u001b[39m\u001b[33m<\u001b[39m\u001b[33m/\u001b[39m\u001b[33mp\u001b[39m\u001b[33m>\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 52 |\u001b[39m             \u001b[33m<\u001b[39m\u001b[33mp\u001b[39m onClick\u001b[33m=\u001b[39m{}\u001b[33m>\u001b[39m\u001b[33mTake\u001b[39m it or leave it\u001b[33m<\u001b[39m\u001b[33m/\u001b[39m\u001b[33mp\u001b[39m\u001b[33m>\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 53 |\u001b[39m           \u001b[33m<\u001b[39m\u001b[33m/\u001b[39m\u001b[33mdiv\u001b[39m\u001b[33m>\u001b[39m\u001b[0m","Parsing error: JSX attributes must only be assigned a non-empty expression.\n\n\u001b[0m \u001b[90m 29 |\u001b[39m     \u001b[90m// TODO: Add a key attribute set to the value of the index position\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 30 |\u001b[39m     \u001b[90m// Hint: use a ternary operator\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 31 |\u001b[39m     \u001b[33m<\u001b[39m\u001b[33mdiv\u001b[39m className\u001b[33m=\u001b[39m{ } key\u001b[33m=\u001b[39m{}\u001b[33m>\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 32 |\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 33 |\u001b[39m       \u001b[90m// TODO: Add an onClick event that invokes the `completeBucketItem` method passing the item id as a argument\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 34 |\u001b[39m       \u001b[33m<\u001b[39m\u001b[33mdiv\u001b[39m key\u001b[33m=\u001b[39m{} onClick\u001b[33m=\u001b[39m{}\u001b[33m>\u001b[39m\u001b[0m"]