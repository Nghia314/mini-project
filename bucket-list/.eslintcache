[{"/Users/sharkbyte/Workspace/BootCamp/mini projects/mini-project/bucket-list/src/index.js":"1","/Users/sharkbyte/Workspace/BootCamp/mini projects/mini-project/bucket-list/src/App.js":"2","/Users/sharkbyte/Workspace/BootCamp/mini projects/mini-project/bucket-list/src/components/BucketList.js":"3","/Users/sharkbyte/Workspace/BootCamp/mini projects/mini-project/bucket-list/src/components/Bucket.js":"4","/Users/sharkbyte/Workspace/BootCamp/mini projects/mini-project/bucket-list/src/components/BucketForm.js":"5"},{"size":197,"mtime":1653683286135,"results":"6","hashOfConfig":"7"},{"size":192,"mtime":1653683286134,"results":"8","hashOfConfig":"7"},{"size":1884,"mtime":1653688235832,"results":"9","hashOfConfig":"7"},{"size":1740,"mtime":1653687855224,"results":"10","hashOfConfig":"7"},{"size":2580,"mtime":1653688793240,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1hcmdtl",{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"18","messages":"19","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"21"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/sharkbyte/Workspace/BootCamp/mini projects/mini-project/bucket-list/src/index.js",[],"/Users/sharkbyte/Workspace/BootCamp/mini projects/mini-project/bucket-list/src/App.js",[],"/Users/sharkbyte/Workspace/BootCamp/mini projects/mini-project/bucket-list/src/components/BucketList.js",["24"],"/Users/sharkbyte/Workspace/BootCamp/mini projects/mini-project/bucket-list/src/components/Bucket.js",["25"],"import React, { useState } from 'react';\nimport BucketForm from './BucketForm';\n\nfunction Bucket(props) {\n  const [edit, setEdit] = useState({\n    id: null,\n    value: '',\n    eagerness: '',\n  });\n\n  console.log(props.bucket);\n\n  const submitUpdate = (value) => {\n\n    // TODO: Write logic to update the `edit` value in state after a user updates an entry in the list\n    \n\n    // TODO: Set the key:value pairs in the `edit` object back to empty strings\n\n  };\n\n  // If the user is attempting to edit an item, render the bucket form with the edit variable passed as a prop\n  if (edit.id) {\n    return <BucketForm edit={edit} onSubmit={submitUpdate} />;\n  }\n\n  return props.bucket.map((item, index) => (\n    // TODO: Add a className of `bucket row complete ${item.eagerness}` for completed items, and `bucket-row ${item.eagerness}` for non-completed items\n    // TODO: Add a key attribute set to the value of the index position\n    // Hint: use a ternary operator\n    <div className={ item.isComplete ? `bucket-row complete ${item.eagerness}` : `bucket-row ${item.eagerness}` } key={item.index}>\n      {/* // TODO: Add an onClick event that invokes the `completeBucketItem` method passing the item id as a argument */}\n      <div key={item.id} onClick={completeBucketItem(item.id)}>\n    {/* TODO: Add the item text here */}\n    item.value\n      </div>\n      <div className=\"icons\">\n        {/* // TODO: Add an onClick event update the `edit` object with the `id`, `value`, and `eagerness` properties */}\n        <p onClick={}> ‚úèÔ∏è</p>\n        {/* TODO: Add an onClick event that will invoke the removeBucketItem method passing in the `item.id` */}\n        <p onClick={}> üóëÔ∏è</p>\n      </div>\n    </div>\n  ));\n}\n\nexport default Bucket;\n",["26","27"],"/Users/sharkbyte/Workspace/BootCamp/mini projects/mini-project/bucket-list/src/components/BucketForm.js",[],{"ruleId":"28","severity":2,"message":"29","line":19,"column":28,"nodeType":"30","messageId":"31","endLine":19,"endColumn":38},{"ruleId":null,"fatal":true,"severity":2,"message":"32","line":39,"column":20},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","replacedBy":"36"},"no-undef","'isComplete' is not defined.","Identifier","undef","Parsing error: JSX attributes must only be assigned a non-empty expression.\n\n\u001b[0m \u001b[90m 37 |\u001b[39m       \u001b[33m<\u001b[39m\u001b[33mdiv\u001b[39m className\u001b[33m=\u001b[39m\u001b[32m\"icons\"\u001b[39m\u001b[33m>\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 38 |\u001b[39m         {\u001b[90m/* // TODO: Add an onClick event update the `edit` object with the `id`, `value`, and `eagerness` properties */\u001b[39m}\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 39 |\u001b[39m         \u001b[33m<\u001b[39m\u001b[33mp\u001b[39m onClick\u001b[33m=\u001b[39m{}\u001b[33m>\u001b[39m ‚úèÔ∏è\u001b[33m<\u001b[39m\u001b[33m/\u001b[39m\u001b[33mp\u001b[39m\u001b[33m>\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 40 |\u001b[39m         {\u001b[90m/* TODO: Add an onClick event that will invoke the removeBucketItem method passing in the `item.id` */\u001b[39m}\u001b[0m\n\u001b[0m \u001b[90m 41 |\u001b[39m         \u001b[33m<\u001b[39m\u001b[33mp\u001b[39m onClick\u001b[33m=\u001b[39m{}\u001b[33m>\u001b[39m üóëÔ∏è\u001b[33m<\u001b[39m\u001b[33m/\u001b[39m\u001b[33mp\u001b[39m\u001b[33m>\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 42 |\u001b[39m       \u001b[33m<\u001b[39m\u001b[33m/\u001b[39m\u001b[33mdiv\u001b[39m\u001b[33m>\u001b[39m\u001b[0m","no-native-reassign",["37"],"no-negated-in-lhs",["38"],"no-global-assign","no-unsafe-negation"]